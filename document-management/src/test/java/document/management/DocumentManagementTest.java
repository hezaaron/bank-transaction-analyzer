/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package document.management;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.io.File;
import java.util.List;

import org.junit.jupiter.api.Test;

import document.management.model.Attribute;
import document.management.model.Document;

public class DocumentManagementTest {
    private static final String RESOURCES = "src"+File.separator+"test"+File.separator+"resources"+File.separator;
    private static final String BANK_STATEMENT = RESOURCES + "BankStatement.csv";
    private static final String BADGE = RESOURCES + "CSDBadge.jpg";
    
    private DocumentManagement documentManagementSystem = new DocumentManagement();
    
    @Test
    void shouldImportFile() throws Exception {
        documentManagementSystem.importFile(BANK_STATEMENT);
        
        final Document document = getDocument();
        
        assertAttributeEquals(BANK_STATEMENT, Attribute.PATH, document);
    }
    
    @Test
    void shouldImportStatementAttributes() throws Exception {
        documentManagementSystem.importFile(BANK_STATEMENT);
        
        final Document document = getDocument();
        
        assertAttributeEquals("30/01/2017,-100,Deliveroo\n"
                + "30/01/2017,-50,Tesco\n"
                + "01/02/2017,6000,Salary\n"
                + "02/02/2017,2000,Royalties\n"
                + "02/02/2017,-4000,Rent\n"
                + "03/02/2017,3000,Tesco\n"
                + "05/02/2017,-30,Cinema", Attribute.TRANSACTIONS, document);
    }
    
    @Test
    void shouldImportImageAttributes() throws Exception {
        documentManagementSystem.importFile(BADGE);
        
        final Document document = getDocument();
        
        assertAttributeEquals("851", Attribute.WIDTH, document);
        assertAttributeEquals("1037", Attribute.HEIGTH, document);
        assertTypeIs("IMAGE", document);
    }
    
    private Document getDocument() {
        final List<Document> documents = documentManagementSystem.contents();
        assertEquals(1, documents.size());
        return documents.get(0);
    }
    
    private void assertTypeIs(final String type, final Document document) {
        assertAttributeEquals(type, Attribute.TYPE, document);
    }
    
    private void assertAttributeEquals(final String expectedValue, final String attribute, final Document document) {
        assertEquals(expectedValue, document.getAttribute(attribute), "Document has the wrong value for " + attribute);
    }
    
}
